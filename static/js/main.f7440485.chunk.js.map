{"version":3,"sources":["Post.jsx","PostObj.js","const.js","be_calls.js","Posts.jsx","AboutMe.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["PostHdr","title","PostTimeStamp","date","PostContent","content","Post","post","className","dateStr","dtFmt","Intl","DateTimeFormat","dateStyle","PostObj","id","author","this","Date","parse","format","POSTS_URL","BE_BASE_URL","prepRespPosts","resp","data","map","sort","a","b","retrievePosts","axios","get","then","usePosts","useState","posts","setPosts","useEffect","catch","fetchPosts","Posts","toString","AboutMe","ABOUT_ROUTE","Header","Title","Menu","to","SiteRoutes","path","element","Body","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAWA,SAASA,EAAT,GAA6B,IAAVC,EAAS,EAATA,MACf,OAAO,6BAAKA,IAGhB,SAASC,EAAT,GAAkC,IAATC,EAAQ,EAARA,KACrB,OAAO,6BAAKA,IAIhB,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACnB,OAAO,4BAAIA,IAGAC,MAvBf,YAAyB,IAATC,EAAQ,EAARA,KACd,OACE,sBAAKC,UAAU,OAAf,UACE,cAACR,EAAD,CAASC,MAAOM,EAAKN,QACrB,cAACC,EAAD,CAAeC,KAAMI,EAAKE,UAC1B,cAACL,EAAD,CAAaC,QAASE,EAAKF,c,0DCL3BK,EAAQ,IAAIC,KAAKC,eAAe,QAAS,CAAEC,UAAW,SAoB7CC,E,WAbb,WAAYC,EAAId,EAAOe,EAAQX,EAASF,GAAO,oBAC7Cc,KAAKF,GAAKA,EACVE,KAAKD,OAASA,EACdC,KAAKhB,MAAQA,EACbgB,KAAKZ,QAAUA,EACfY,KAAKd,KAAOe,KAAKC,MAAMhB,G,yCAGzB,WACE,OAAOO,EAAMU,OAAOH,KAAKd,U,KChBvBkB,EAAYC,mDCelB,SAASC,EAAcC,GACrB,OAAiBA,EAAKC,KAAKC,KACzB,SAACnB,GAAD,OAAU,IAAIO,EAAQP,EAAKQ,GAAIR,EAAKN,MAAOM,EAAKS,OAAQT,EAAKF,QAASE,EAAKJ,SAT9DwB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzB,KAAO0B,EAAE1B,QAcpC,SAAe2B,IAAtB,+B,4CAAO,sBAAAF,EAAA,+EACEG,IAAMC,IAAIX,GACdY,MAAK,SAACT,GAAD,OAAUD,EAAcC,OAF3B,4C,sBCLP,SAASU,IACP,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OAHAC,qBAAU,YAZZ,SAAoBD,GAEXP,IACJG,MAAK,SAACG,GAAYC,EAASD,MAC3BG,QASDC,CAAWH,KACV,IACID,EAeMK,MATf,WACE,IAAML,EAAQF,IACd,OACE,mCACIE,EAAMV,KAAI,SAACnB,GAAD,OAAU,cAAC,EAAD,CAA+BA,KAAMA,GAA1BA,EAAKQ,GAAG2B,kBC3BhCC,MAJf,WACE,OAAO,yD,cCQHC,EAAc,SAWpB,SAASC,IACP,OACE,wBAAQrC,UAAU,cAAlB,SACE,cAACsC,EAAD,MAKN,SAASA,IACP,OACE,uDAMJ,SAASC,IACP,OACE,qBAAIvC,UAAU,OAAd,UACE,6BACE,cAAC,IAAD,CAAMwC,GAhCK,IAgCX,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAIJ,EAAV,wBAMR,SAASK,IACP,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KA5CM,IA4CYC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAMN,EAAaO,QAAS,cAAC,EAAD,SAKzC,SAASC,IACP,OACE,eAAC,IAAD,WACE,cAACL,EAAD,IACA,cAACE,EAAD,OAKSI,MAxDf,WACE,OACE,sBAAK7C,UAAU,MAAf,UACE,cAACqC,EAAD,IACA,cAACO,EAAD,QCLSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7440485.chunk.js","sourcesContent":["\nfunction Post({ post }) {\n  return (\n    <div className=\"post\">\n      <PostHdr title={post.title} />\n      <PostTimeStamp date={post.dateStr} />\n      <PostContent content={post.content} />\n    </div>\n  );\n}\n\nfunction PostHdr({ title }) {\n    return <h2>{title}</h2>\n}\n\nfunction PostTimeStamp({ date }) {\n    return <h3>{date}</h3>;\n}\n\n\nfunction PostContent({ content }) {\n    return <p>{content}</p>;\n}\n\nexport default Post;\n","\nconst dtFmt = new Intl.DateTimeFormat('en-US', { dateStyle: 'full' })\n\n/*\n * Class that contains all the data related to a single\n * blog post.\n */\nclass PostObj {\n  constructor(id, title, author, content, date) {\n    this.id = id;\n    this.author = author;\n    this.title = title;\n    this.content = content;\n    this.date = Date.parse(date);\n  }\n\n  get dateStr() {\n    return dtFmt.format(this.date);\n  }\n}\n\nexport default PostObj;\n","const BE_BASE_URL = 'https://nathanconroydev.pythonanywhere.com';\nconst POSTS_URL = BE_BASE_URL + '/posts';\n\nexport { POSTS_URL };\n","import axios from 'axios';\nimport PostObj from './PostObj';\n\nimport { POSTS_URL } from './const';\n\n/*\n * Sorts posts by date.\n */\nfunction sortPosts(posts) {\n    return posts.sort((a, b) => a.date - b.date);\n}\n\n\n/*\n * Takes the server response and returns list of posts.\n */\nfunction prepRespPosts(resp) {\n  return sortPosts(resp.data.map(\n    (post) => new PostObj(post.id, post.title, post.author, post.content, post.date)\n  ));\n}\n\n\nexport async function retrievePosts() {\n  return axios.get(POSTS_URL)\n    .then((resp) => prepRespPosts(resp));\n}\n\nexport default retrievePosts;\n","import { Fragment, useState, useEffect } from 'react';\n\nimport Post from './Post';\nimport { retrievePosts } from './be_calls';\n\n/*\n * Fetch posts from the backend.\n */\nfunction fetchPosts(setPosts) {\n  // TODO: handle timeout gracefully & test\n  return retrievePosts()\n    .then((posts) => { setPosts(posts); })\n    .catch(); // TODO: handle exception & test\n}\n\n/*\n * Returns lists of posts.\n */\nfunction usePosts() {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchPosts(setPosts);\n  }, [])\n  return posts;\n}\n\n/*\n * JSX containing Posts.\n */\nfunction Posts() {\n  const posts = usePosts();\n  return (\n    <>\n      { posts.map((post) => <Post key={post.id.toString()} post={post} />) }\n    </>\n  );\n}\n\nexport default Posts;\n","\n\nfunction AboutMe() {\n  return <p>Page under development.</p>;\n}\n\nexport default AboutMe;\n\n","import './App.css';\nimport Posts from './Posts';\nimport AboutMe from './AboutMe';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst NULL_ROUTE = \"/\";\nconst ABOUT_ROUTE = \"/about\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nfunction Header() {\n  return (\n    <header className=\"site_header\">\n      <Title />\n    </header>\n  );\n}\n\nfunction Title() {\n  return (\n    <h1>\n      Technical Meditations\n    </h1>\n  );\n}\n\nfunction Menu() {\n  return (\n    <ul className=\"menu\">\n      <li>\n        <Link to={NULL_ROUTE}>Home</Link>\n      </li>\n      <li>\n        <Link to={ABOUT_ROUTE}>About</Link>\n      </li>\n    </ul>\n  );\n}\n\nfunction SiteRoutes() {\n  return (\n    <Routes>\n      <Route path={NULL_ROUTE} element={<Posts />}/>\n      <Route path={ABOUT_ROUTE} element={<AboutMe />}/>\n    </Routes>\n  );\n}\n\nfunction Body() {\n  return (\n    <Router>\n      <Menu />\n      <SiteRoutes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}